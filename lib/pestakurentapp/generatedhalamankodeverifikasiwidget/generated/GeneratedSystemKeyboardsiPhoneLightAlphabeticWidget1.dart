import 'package:flutter/material.dart';
import 'package:flutterapp/helpers/transform/transform.dart';
import 'package:flutterapp/pestakurentapp/generatedhalamankodeverifikasiwidget/generated/GeneratedBackgroundWidget2.dart';
import 'package:flutterapp/pestakurentapp/generatedhalamankodeverifikasiwidget/generated/GeneratedKeysWidget1.dart';
import 'package:flutterapp/pestakurentapp/generatedhalamankodeverifikasiwidget/generated/GeneratedHomeIndicatorWidget2.dart';

/* Frame System / Keyboards / iPhone / Light - Alphabetic
    Autogenerated by FlutLab FTF Generator
  */
class GeneratedSystemKeyboardsiPhoneLightAlphabeticWidget1
    extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Visibility(
      visible: false,
      child: Container(
        width: 390.0,
        height: 302.71710205078125,
        child: Stack(
            fit: StackFit.expand,
            alignment: Alignment.center,
            overflow: Overflow.visible,
            children: [
              ClipRRect(
                borderRadius: BorderRadius.zero,
                child: Container(
                  color: Color.fromARGB(0, 204, 206, 211),
                ),
              ),
              Positioned(
                left: 0.0,
                top: 0.0,
                right: 0.0,
                bottom: 0.0,
                width: null,
                height: null,
                child: LayoutBuilder(builder:
                    (BuildContext context, BoxConstraints constraints) {
                  final double width = constraints.maxWidth;

                  final double height = constraints.maxHeight;

                  return Stack(children: [
                    TransformHelper.translate(
                        x: 0,
                        y: 0,
                        z: 0,
                        child: Container(
                          width: width,
                          height: height,
                          child: GeneratedBackgroundWidget2(),
                        ))
                  ]);
                }),
              ),
              Positioned(
                left: 0.0,
                top: 0.0,
                right: 0.0,
                bottom: 0.0,
                width: null,
                height: null,
                child: LayoutBuilder(builder:
                    (BuildContext context, BoxConstraints constraints) {
                  final double width =
                      constraints.maxWidth * 0.8761681972405849;

                  final double height =
                      constraints.maxHeight * 0.1023701616947096;

                  return Stack(children: [
                    TransformHelper.translate(
                        x: 0,
                        y: constraints.maxHeight * 0.7737979808122116,
                        z: 0,
                        child: Container(
                          width: width,
                          height: height,
                          child: GeneratedHomeIndicatorWidget2(),
                        ))
                  ]);
                }),
              ),
              Positioned(
                left: 0.0,
                top: 0.0,
                right: 0.0,
                bottom: 0.0,
                width: null,
                height: null,
                child: LayoutBuilder(builder:
                    (BuildContext context, BoxConstraints constraints) {
                  final double width =
                      constraints.maxWidth * 0.9840003380408654;

                  final double height =
                      constraints.maxHeight * 0.8900343507502545;

                  return Stack(children: [
                    TransformHelper.translate(
                        x: constraints.maxWidth * 0.00799996302678035,
                        y: constraints.maxHeight * 0.02749144381625,
                        z: 0,
                        child: Container(
                          width: width,
                          height: height,
                          child: GeneratedKeysWidget1(),
                        ))
                  ]);
                }),
              )
            ]),
      ),
    );
  }
}
